{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","LENGTH","sort","a","b","length","ALPABET","localeCompare","reverse","App","state","sortByName","setState","sortByLength","reverseGoods","reset","NONE","this","isDefault","className","type","classNames","onClick","map","good","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAgBzB,OAZAI,QAAQC,IAAIJ,EAAUC,GAElBD,IAAaJ,EAASS,OACxBH,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAChCT,IAAaJ,EAASc,SAC/BR,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAG1CP,GACFC,EAAaU,UAGRV,G,SAjCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAU,GAHd,EAMEe,WAAa,WACX,EAAKC,SAAS,CAAEhB,SAAUJ,EAASc,WAPvC,EAUEO,aAAe,WACb,EAAKD,SAAS,CAAEhB,SAAUJ,EAASS,UAXvC,EAcEa,aAAe,WACb,EAAKF,UAAS,SAAAF,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBAhBzB,EAoBEkB,MAAQ,WACN,EAAKH,SAAS,CACZhB,SAAUJ,EAASwB,KACnBnB,YAAY,KAvBlB,4CA2BE,WAAU,IAAD,OACP,EAAiCoB,KAAKP,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdsB,EAAYtB,IAAaJ,EAASwB,MAAQnB,EAEhD,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYzB,IAAaJ,EAASc,UAEpCgB,QAASL,KAAKN,WALhB,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYzB,IAAaJ,EAASS,SAEpCqB,QAASL,KAAKJ,aALhB,4BAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaxB,IAEfyB,QAAS,WACP,EAAKV,SAAS,CAAEf,YAAaA,KANjC,qBAWEqB,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASL,KAAKF,MAHhB,sBAUJ,6BACGrB,EAAkBD,EAAiBwB,KAAKP,OAAOa,KAAI,SAAAC,GAAI,OACtD,oBAAmB,UAAQ,OAA3B,SAAmCA,GAA1BC,2BA9ErB,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.400d9273.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  } else if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State > {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const isDefault = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            })}\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n          >\n            Reverse\n          </button>\n          { isDefault && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li key={uuidv4()} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}